# Based upon Fedora's python-2.6.4-27.fc13.src.rpm python-2.6-lib64.patch
diff -ur Python-2.6.7.orig/Lib/distutils/command/install.py Python-2.6.7/Lib/distutils/command/install.py
--- Python-2.6.7.orig/Lib/distutils/command/install.py	2008-05-07 08:11:46.000000000 +0930
+++ Python-2.6.7/Lib/distutils/command/install.py	2011-08-18 20:31:24.780347608 +0930
@@ -42,14 +42,14 @@
 INSTALL_SCHEMES = {
     'unix_prefix': {
         'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib64/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
         'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'platlib': '$base/lib64/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
diff -ur Python-2.6.7.orig/Lib/distutils/sysconfig.py Python-2.6.7/Lib/distutils/sysconfig.py
--- Python-2.6.7.orig/Lib/distutils/sysconfig.py	2010-08-04 06:48:06.000000000 +0930
+++ Python-2.6.7/Lib/distutils/sysconfig.py	2011-08-18 20:31:24.781347587 +0930
@@ -119,8 +119,12 @@
         prefix = plat_specific and EXEC_PREFIX or PREFIX
 
     if os.name == "posix":
+        if plat_specific or standard_lib:
+            lib = "lib64"
+        else:
+            lib = "lib"
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 lib, "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
diff -ur Python-2.6.7.orig/Lib/site.py Python-2.6.7/Lib/site.py
--- Python-2.6.7.orig/Lib/site.py	2010-03-22 00:32:32.000000000 +1030
+++ Python-2.6.7/Lib/site.py	2011-08-18 20:31:24.870345746 +0930
@@ -265,12 +265,16 @@
         if sys.platform in ('os2emx', 'riscos'):
             sitedirs.append(os.path.join(prefix, "Lib", "site-packages"))
         elif os.sep == '/':
+            sitedirs.append(os.path.join(prefix, "lib64",
+                                        "python" + sys.version[:3],
+                                        "site-packages"))
             sitedirs.append(os.path.join(prefix, "lib",
                                         "python" + sys.version[:3],
                                         "site-packages"))
             sitedirs.append(os.path.join(prefix, "lib", "site-python"))
         else:
             sitedirs.append(prefix)
+            sitedirs.append(os.path.join(prefix, "lib64", "site-packages"))
             sitedirs.append(os.path.join(prefix, "lib", "site-packages"))
 
         if sys.platform == "darwin":
diff -ur Python-2.6.7.orig/Makefile.pre.in Python-2.6.7/Makefile.pre.in
--- Python-2.6.7.orig/Makefile.pre.in	2010-08-02 07:35:31.000000000 +0930
+++ Python-2.6.7/Makefile.pre.in	2011-08-18 20:33:50.137335411 +0930
@@ -91,7 +91,7 @@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/lib64
 
 # Detailed destination directories
 BINLIBDEST=	$(LIBDIR)/python$(VERSION)
diff -ur Python-2.6.7.orig/Modules/getpath.c Python-2.6.7/Modules/getpath.c
--- Python-2.6.7.orig/Modules/getpath.c	2010-07-24 19:39:36.000000000 +0930
+++ Python-2.6.7/Modules/getpath.c	2011-08-18 20:34:51.437060344 +0930
@@ -117,8 +117,8 @@
 #endif
 
 #ifndef PYTHONPATH
-#define PYTHONPATH PREFIX "/lib/python" VERSION ":" \
-              EXEC_PREFIX "/lib/python" VERSION "/lib-dynload"
+#define PYTHONPATH PREFIX "/lib64/python" VERSION ":" \
+              EXEC_PREFIX "/lib64/python" VERSION "/lib-dynload"
 #endif
 
 #ifndef LANDMARK
@@ -129,7 +129,7 @@
 static char exec_prefix[MAXPATHLEN+1];
 static char progpath[MAXPATHLEN+1];
 static char *module_search_path = NULL;
-static char lib_python[] = "lib/python" VERSION;
+static char lib_python[] = "lib64/python" VERSION;
 
 static void
 reduce(char *dir)
@@ -524,7 +524,7 @@
     }
     else
         strncpy(zip_path, PREFIX, MAXPATHLEN);
-    joinpath(zip_path, "lib/python00.zip");
+    joinpath(zip_path, "lib64/python00.zip");
     bufsz = strlen(zip_path);   /* Replace "00" with version */
     zip_path[bufsz - 6] = VERSION[0];
     zip_path[bufsz - 5] = VERSION[2];
@@ -534,7 +534,7 @@
             fprintf(stderr,
                 "Could not find platform dependent libraries <exec_prefix>\n");
         strncpy(exec_prefix, EXEC_PREFIX, MAXPATHLEN);
-        joinpath(exec_prefix, "lib/lib-dynload");
+        joinpath(exec_prefix, "lib64/lib-dynload");
     }
     /* If we found EXEC_PREFIX do *not* reduce it!  (Yet.) */
 
diff -ur Python-2.6.7.orig/Modules/Setup.dist Python-2.6.7/Modules/Setup.dist
--- Python-2.6.7.orig/Modules/Setup.dist	2008-11-27 20:45:12.000000000 +1030
+++ Python-2.6.7/Modules/Setup.dist	2011-08-18 20:39:23.972358550 +0930
@@ -414,7 +414,7 @@
 #DB=/usr/local/BerkeleyDB.4.0
 #DBLIBVER=4.0
 #DBINC=$(DB)/include
-#DBLIB=$(DB)/lib
+#DBLIB=$(DB)/lib64
 #_bsddb _bsddb.c -I$(DBINC) -L$(DBLIB) -ldb-$(DBLIBVER)
 
 # Historical Berkeley DB 1.85
@@ -460,7 +460,7 @@
 # Andrew Kuchling's zlib module.
 # This require zlib 1.1.3 (or later).
 # See http://www.gzip.org/zlib/
-#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz
+#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib64 -lz
 
 # Interface to the Expat XML parser
 #
diff -ur Python-2.6.7.orig/setup.py Python-2.6.7/setup.py
--- Python-2.6.7.orig/setup.py	2010-07-17 22:01:09.000000000 +0930
+++ Python-2.6.7/setup.py	2011-08-18 20:31:25.062341778 +0930
@@ -356,7 +356,7 @@
 
     def detect_modules(self):
         # Ensure that /usr/local is always used
-        add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
+        add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib64')
         add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
 
         # Add paths specified in the environment variables LDFLAGS and
@@ -662,11 +662,11 @@
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(lib_dirs +
-                                               ['/usr/lib/termcap'],
+                                               ['/usr/lib64/termcap'],
                                                'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/lib64/termcap'],
                                    extra_link_args=readline_extra_link_args,
                                    libraries=readline_libs) )
         else:
@@ -703,8 +703,8 @@
             if krb5_h:
                 ssl_incs += krb5_h
         ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
+                                     ['/usr/local/ssl/lib64',
+                                      '/usr/contrib/ssl/lib64/'
                                      ] )
 
         if (ssl_incs is not None and
