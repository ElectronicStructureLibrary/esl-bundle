<?xml version="1.0"?><!--*- mode: nxml; indent-tabs-mode: nil -*-->
<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
<!-- vim:set ts=2 expandtab: -->
<moduleset>

  <repository name="local" type="tarball" href="./"/>
  <repository name="libyaml" type="tarball" href="http://pyyaml.org/download/libyaml/"/>


  <autotools id="libxc" autogen-sh="configure" autogenargs="--enable-fortran --enable-static --enable-shared LIBS='-lm'">
    <branch repo="local" module="libxc-4.3.4.tar.gz" version="4.3.4" hash="md5:ec17884768fe41bc234f79cedb85af66"/>
  </autotools>

  <autotools id="libyaml" autogen-sh="configure">
    <branch repo="libyaml" module="yaml-0.2.2.tar.gz" version="0.2.2" hash="md5:54bf11ccb8bc488b5b3bec931f5b70dc" checkoutdir="libyaml-0.2.2"/>
  </autotools>

  <autotools id="futile" autogen-sh="configure">
    <branch repo="local" module="futile-1.8.tar.gz" version="1.8.3" hash="md5:f30e354b5bae61ac12127efee5f4412d">
      <patch file="futile_intel_bug.patch" strip="1"/>
    </branch>
    <dependencies>
      <if condition-set="yaml">
        <dep package="libyaml"/>
      </if>
    </dependencies>
  </autotools>

  <autotools id="psolver" autogen-sh="configure" autogenargs="--disable-mpi">
    <branch repo="local" module="psolver-1.8.tar.gz" version="1.8.3" hash="md5:0c13d0405c4cc05325b4be61fa1c4dad"/>
    <dependencies>
      <dep package="futile"/>
    </dependencies>
  </autotools>

  <autotools id="psolver-mpi" autogen-sh="configure" autogenargs="--enable-mpi">
    <branch repo="local" module="psolver-1.8.tar.gz" version="1.8.3" hash="md5:0c13d0405c4cc05325b4be61fa1c4dad" checkoutdir="psolver-mpi"/>
    <dependencies>
      <dep package="futile"/>
    </dependencies>
  </autotools>

  <autotools id="pspio" autogen-sh="configure" autogenargs="--enable-gsl --enable-fortran">
    <branch repo="local" module="libpspio-0.2.4.tar.gz" version="0.2.4" hash="md5:740861617e1feb50a9e00609769b12d8"/>
  </autotools>

  <autotools id="xmlf90" autogen-sh="configure">
    <branch repo="local" module="xmlf90-1.5.4.tar.gz" version="1.5.4" hash="md5:61b513a40d6e64ddf8cc7a029341be86"/>
  </autotools>

  <autotools id="libpsml" autogen-sh="configure" autogenargs="--with-xmlf90=$JHBUILD_PREFIX">
    <branch repo="local" module="libpsml-1.1.10.tar.gz" version="1.1.10" hash="md5:e5176e95dbe495762b64d0e5661b0258"/>
    <dependencies>
      <dep package="xmlf90"/>
    </dependencies>
  </autotools>

  <autotools id="fdf" autogen-sh="autogen.sh+configure">
    <branch repo="local" module="libfdf-0.2.2.tar.gz" version="0.2.2" hash="md5:ffa39f8640b3dae8962e62b3956f79d9"/>
  </autotools>

  <autotools id="elpa" autogen-sh="configure" autogenargs="--with-mpi=no">
    <branch repo="local" module="elpa-2019.05.002.tar.gz" version="2019.05.002" hash="md5:f2213cebfa8e2ae3a55a2479fa7dab5d"/>
  </autotools>

  <autotools id="elpa-mpi" autogen-sh="configure" autogenargs="--with-mpi=yes">
    <branch repo="local" module="elpa-2019.05.002.tar.gz" version="2019.05.002" hash="md5:f2213cebfa8e2ae3a55a2479fa7dab5d"/>
  </autotools>

  <cmake id="NTPoly" use-ninja="no" cmakeargs='-DCMAKE_INSTALL_PREFIX=$JHBUILD_PREFIX'>
    <branch repo="local" module="NTPoly-2.4.0.tar.gz" version="2.4.0" hash="md5:771ebddfaa7c72306e0384e2d1d028c5"/>
  </cmake>

  <cmake id="elsi" use-ninja="no" cmakeargs='-DUSE_EXTERNAL_OMM=ON -DUSE_EXTERNAL_ELPA=ON -DUSE_EXTERNAL_PEXSI=ON -DUSE_EXTERNAL_NTPOLY=On -DLIB_PATHS=$JHBUILD_PREFIX/lib -DINC_PATHS="$JHBUILD_PREFIX/include;$JHBUILD_PREFIX/include/elpa-2019.05.002/modules"'>
    <branch repo="local" module="elsi-2.5.0.tar.gz" version="2.5.0" ha2sh="md5:d9d17d1348d40301681c070c56ba29dd"/>
    <dependencies>
      <dep package="fakepc"/>
      <dep package="superlu_dist"/>
      <dep package="NTPoly"/>
      <dep package="pexsi"/>
      <if condition-unset="no_elpa">
        <dep package="elpa-mpi"/>
      </if>
    </dependencies>
  </cmake>

  <cmake id="pexsi" use-ninja="no" cmakeargs='-Dsuperlu_dist_INCLUDE_DIR=$JHBUILD_PREFIX/include  -Dsuperlu_dist_LIBRARIES="-L$JHBUILD_PREFIX/lib -lsuperlu_dist" -Dmetis_INCLUDE_DIR=$JHBUILD_PREFIX/include -Dmetis_LIBRARIES="-lscotchmetis -lscotch -lz" -Dparmetis_INCLUDE_DIR=$JHBUILD_PREFIX/include -Dparmetis_LIBRARIES="-lptscotchparmetis -lptscotch -lptscotcherr -lz" '>
    <branch repo="local" module="pexsi_v1.2.0.tar.gz" version="1.2.0" hash="md5:dc6ceaf23a3caafe83c05ea4ad72198f">
      <patch file="pexsi_find_metis.patch" strip="1"/>
      <patch file="pexsi_use_ptscotch.patch" strip="1"/>
      <patch file="pexsi_elsi_2.3.1_happy.patch" strip="1"/>
      <patch file="pexsi_cmake.patch" strip="1"/>
      <patch file="pexsi-1.2.0-cname.patch" strip="0"/>
      <patch file="pexsi-1.2.0-mpi30.patch" strip="0"/>
    </branch>
    <dependencies>
      <dep package="fakepc"/>
      <dep package="superlu_dist"/>
      <dep package="scotch"/>
    </dependencies>
  </cmake>

  <makesys id="scotch" makeargs="-C  src -j 1 scotch ptscotch" >
    <branch repo="local" module="scotch_6.0.0.tar.gz" version="6.0.0" hash="md5:ba117428c0a6cd97d0c93e8b872bb3fe">
      <patch file="scotch_make.patch" strip="0"/>
      <patch file="scotch-6.0.0-mpi30.patch" strip="1"/>
    </branch>
  </makesys>

  <cmake id="superlu_dist" use-ninja="no" cmakeargs="-DUSE_XSDK_DEFAULTS=FALSE -Denable_blaslib=OFF -DTPL_PARMETIS_LIBRARIES='-lptscotchparmetis -lptscotch -lscotchmetis -lscotch -lptscotcherr -lz' -DTPL_PARMETIS_INCLUDE_DIRS=$JHBUILD_PREFIX/include">
    <branch repo="local"  module="superlu_dist-6.2.0.tar.gz" version="6.2.0" hash="md5:7b9fa7c047fd1988b61f9c6f744c829b">
      <patch file="superlu.patch" strip="0"/>
    </branch>
    <dependencies>
      <dep package="scotch"/>
    </dependencies>
  </cmake>

  <makesys id="fdict">
    <branch repo="local" module="fdict-0.8.0.tar.gz" version="0.8.0" hash="md5:1836cd21402fbe7927c9ca0351bf9c36"/>
  </makesys>

  <makesys id="flook" makeargs="liball">
    <branch repo="local" module="flook-0.8.1.tar.gz" version="0.8.1" hash="md5:5f2addefdcbeb252b9652a8bdfd7a1f6">
    </branch>
  </makesys>

  <autotools id="libgridxc" autogen-sh="configure" autogenargs="--enable-multiconfig --with-libxc=$JHBUILD_PREFIX --with-mpi=no">
    <branch repo="local" module="libgridxc-0.9.5.tar.gz" version="0.9.5" checkoutdir="libgridxc" hash="md5:fa3044ddc9775cb87fde27e046165e85"/>
    <dependencies>
      <dep package="libxc"/>
    </dependencies>
  </autotools>

  <autotools id="libvdwxc" autogen-sh="configure" autogenargs="--with-mpi=no">
    <branch repo="local" module="libvdwxc-0.4.0.tar.gz" version="0.4.0" hash="md5:68196798d69d593b62ea9f482468db66"/>
  </autotools>

  <autotools id="libvdwxc-mpi" autogen-sh="configure" autogenargs="--with-mpi=yes">
    <branch repo="local" module="libvdwxc-0.4.0.tar.gz" version="0.4.0" hash="md5:68196798d69d593b62ea9f482468db66"/>
  </autotools>

  <autotools id="libgridxc-mpi" autogen-sh="configure" autogenargs="--enable-multiconfig --with-libxc=$JHBUILD_PREFIX --with-mpi=yes">
    <branch repo="local" module="libgridxc-0.9.5.tar.gz" version="0.9.5" checkoutdir="libgridxc-mpi" hash="md5:fa3044ddc9775cb87fde27e046165e85"/>
    <dependencies>
      <dep package="libxc"/>
    </dependencies>
  </autotools>

  <makesys id="wannier90" makeargs="all COMMS=serial PREFIX=''">
    <branch repo="local" module="wannier90-3.0.0.tar.gz" version="3.0.0" hash="md5:7a1337b187f9b95b7a04b1548a56064d">
      <patch file="wannier90-3.0.0-make.patch" strip="0"/>
    </branch>
  </makesys>

  <makesys id="wannier90-mpi" makeargs="all COMMS=mpi PREFIX=''">
    <branch repo="local" module="wannier90-3.0.0.tar.gz" version="3.0.0" hash="md5:7a1337b187f9b95b7a04b1548a56064d">
      <patch file="wannier90-3.0.0-make.patch" strip="0"/>
    </branch>
  </makesys>

  <!-- OMM Bundle BEGIN -->
  <autotools id="libomm" autogen-sh="configure" autogenargs="--with-msw=$JHBUILD_PREFIX">
    <branch repo="local" module="libomm-1.0.0.tar.gz" version="1.0.0" hash="md5:7c70acd17478bc09837c18202659c2c7"/>
    <dependencies>
      <dep package="matrixswitch"/>
    </dependencies>
  </autotools>

  <autotools id="matrixswitch" autogen-sh="configure">
    <branch repo="local" module="matrixswitch-1.0.0.tar.gz" version="1.0.0" hash="md5:8767df53916e440300e6761ed9747c1e"/>
  </autotools>
  <!-- OMM Bundle END -->

  <autotools id="fakepc" autogen-sh="configure">
    <branch repo="local" module="fakepc-0.2.1.tar.gz" version="0.2.1" hash="md5:da1b8210df02431f727c712483d69fcd"/>
    <dependencies>
      <dep package="NTPoly"/>
      <dep package="scotch"/>
      <!-- <dep package="wannier90"/> -->
    </dependencies>
  </autotools>

  <cmake id="spglib" use-ninja="no" cmakeargs='-DCMAKE_INSTALL_PREFIX=$JHBUILD_PREFIX -DWITH_Fortran=on' makeargs="-j 1">
    <branch repo="local" module="spglib-1.14.1.tar.gz" version="1.14.1" hash="md5:f39a11c43e6967c54b1a73b0149a41a0">
      <patch file="spglib-1.14.1-cmake.patch" strip="0"/>
    </branch>
  </cmake>

  <cmake id="elsi_rci" use-ninja="no" cmakeargs='-DCMAKE_INSTALL_PREFIX=$JHBUILD_PREFIX -DENABLE_TESTS=off'>
    <branch repo="local" module="elsi_rci-0.1.0.tar.bz2" version="0.1.0" hash="md5:2510e7d7749171b5aae26c61a59a5759">
      <patch file="elsi_rci-0.1.0-cmake.patch" strip="0"/>
    </branch>
  </cmake>

  <metamodule id="esl-bundle">
    <dependencies>
      <dep package="fdict"/>
      <dep package="flook"/>
      <dep package="libxc"/>
      <dep package="psolver"/>
      <dep package="pspio"/>
      <dep package="fdf"/>
      <dep package="libomm"/>
      <dep package="libpsml"/>
      <dep package="libgridxc"/>
      <dep package="libvdwxc"/>
      <if condition-unset="no_elpa">
        <dep package="elpa"/>
      </if>
      <dep package="spglib"/>
      <dep package="wannier90"/>
      <dep package="else_rci"/>
    </dependencies>
  </metamodule>

  <metamodule id="esl-bundle-mpi">
    <dependencies>
      <dep package="fdict"/>
      <dep package="flook"/>
      <dep package="libxc"/>
      <dep package="psolver-mpi"/>
      <dep package="pspio"/>
      <dep package="fdf"/>
      <dep package="libomm"/>
      <dep package="libpsml"/>
      <dep package="elsi"/>
      <dep package="fakepc"/>
      <dep package="libgridxc-mpi"/>
      <dep package="libvdwxc-mpi"/>
      <if condition-unset="no_elpa">
        <dep package="elpa-mpi"/>
      </if>
      <dep package="spglib"/>
      <dep package="wannier90-mpi"/>
      <dep package="else_rci"/>
    </dependencies>
  </metamodule>

</moduleset>
